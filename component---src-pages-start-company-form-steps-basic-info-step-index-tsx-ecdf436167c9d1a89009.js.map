{"version":3,"file":"component---src-pages-start-company-form-steps-basic-info-step-index-tsx-ecdf436167c9d1a89009.js","mappings":"uGAEA,IAAIA,EAAO,EAAQ,MAIfC,EAAU,GACVC,EAAU,GAGd,SAASC,EAAeC,GACtBH,EAAQG,EAAQC,KAAKC,eAAiBF,EAAQG,KAC9CL,EAAQE,EAAQG,KAAKD,eAAiBF,EAAQC,KAJhDL,EAAKQ,QAAQL,GAObM,EAAQC,UAAY,SAAmBC,GAChCA,GAAcA,EAAUC,QAC7BD,EAAUH,SAAQ,SAAUJ,GAC1B,IAAIS,EAAab,EAAKc,WAAU,SAAUC,GACxC,OAAOA,EAAKR,OAASH,EAAQG,QAE/BP,EAAKa,GAAcT,EACnBD,EAAeC,OAInBK,EAAQO,QAAU,SAAiBX,GACjC,OAAOJ,EAAQI,EAAKC,gBAGtBG,EAAQQ,QAAU,SAAiBV,GACjC,OAAOL,EAAQK,EAAKD,gBAGtBG,EAAQS,SAAW,WACjB,OAAOlB,EAAKmB,KAAI,SAAUf,GACxB,OAAOA,EAAQC,SAInBI,EAAQW,SAAW,WACjB,OAAOpB,EAAKmB,KAAI,SAAUf,GACxB,OAAOA,EAAQG,SAInBE,EAAQY,YAAc,WACpB,OAAOnB,GAGTO,EAAQa,YAAc,WACpB,OAAOrB,GAGTQ,EAAQc,QAAU,WAChB,OAAOvB,I,yFC7CM,SAASwB,EAAT,GAKS,IAJtBC,EAIqB,EAJrBA,KACAC,EAGqB,EAHrBA,YAGqB,IAFrBC,SAAAA,OAEqB,MAFV,iBAAO,IAEG,EADrBC,EACqB,EADrBA,OAEMC,EAAmBC,EAAAA,UAEtBX,KAAI,gBAAGZ,EAAH,EAAGA,KAAMF,EAAT,EAASA,KAAT,OAAoB,0BAAQ0B,IAAKxB,GAAOF,MAC/C,OACE,uBAAK2B,MAAO,CAAEC,QAASR,IAASC,EAAT,kBACrB,yBAAOQ,UAAU,QAAQC,QAAQ,aAC/B,wBAAMD,UAAU,iBAAhB,2BACA,wBAAMA,UAAU,iBAAhB,KACA,uCACEE,KAAK,OACLC,GAAG,YACHhC,KAAK,aACL6B,UAAS,2RAQGN,MAAAA,GAAAA,EAAQU,WAAR,uBARH,uBAUTC,YAAY,gBACRZ,EAAS,aAAc,CAAEa,UAAU,OAExCZ,MAAAA,OAAA,EAAAA,EAAQU,aACP,wBAAMJ,UAAU,yBAAhB,+BAKJ,yBAAOA,UAAU,aAAaC,QAAQ,YACpC,wBAAMD,UAAU,iBAAhB,sBACA,uCACEE,KAAK,OACLC,GAAG,WACHhC,KAAK,YACL6B,UAAU,kHASVK,YAAY,iBACRZ,EAAS,gBAGjB,yBAAOO,UAAU,aAAaC,QAAQ,sBACpC,wBAAMD,UAAU,iBAAhB,qCAGA,wCACEK,YAAY,SACZlC,KAAK,uBACLgC,GAAG,qBACHH,UAAU,mHASNP,EAAS,yBAEb,2CACCE,O","sources":["webpack://website/./node_modules/country-list/country-list.js","webpack://website/./src/pages/start-company/form/steps/BasicInfoStep/index.tsx"],"sourcesContent":["'use strict';\n\nvar data = require('./data.json');\n/** Precompute name and code lookups. */\n\n\nvar nameMap = {};\nvar codeMap = {};\ndata.forEach(mapCodeAndName);\n\nfunction mapCodeAndName(country) {\n  nameMap[country.name.toLowerCase()] = country.code;\n  codeMap[country.code.toLowerCase()] = country.name;\n}\n\nexports.overwrite = function overwrite(countries) {\n  if (!countries || !countries.length) return;\n  countries.forEach(function (country) {\n    var foundIndex = data.findIndex(function (item) {\n      return item.code === country.code;\n    });\n    data[foundIndex] = country;\n    mapCodeAndName(country);\n  });\n};\n\nexports.getCode = function getCode(name) {\n  return nameMap[name.toLowerCase()];\n};\n\nexports.getName = function getName(code) {\n  return codeMap[code.toLowerCase()];\n};\n\nexports.getNames = function getNames() {\n  return data.map(function (country) {\n    return country.name;\n  });\n};\n\nexports.getCodes = function getCodes() {\n  return data.map(function (country) {\n    return country.code;\n  });\n};\n\nexports.getCodeList = function getCodeList() {\n  return codeMap;\n};\n\nexports.getNameList = function getNameList() {\n  return nameMap;\n};\n\nexports.getData = function getData() {\n  return data;\n};","import React from 'react';\nimport countryList from 'country-list';\n\ninterface BasicInfoStepProps {\n  step: number;\n  currentStep: number;\n  register: CallableFunction;\n  errors: Record<string, any>;\n}\n\nexport default function BasicInfoStep({\n  step,\n  currentStep,\n  register = () => ({}),\n  errors,\n}: BasicInfoStepProps) {\n  const countriesOptions = countryList\n    .getData()\n    .map(({ code, name }) => <option key={code}>{name}</option>);\n  return (\n    <div style={{ display: step === currentStep ? `inline` : `none` }}>\n      <label className=\"block\" htmlFor=\"firstName\">\n        <span className=\"text-gray-700\">What&apos;s your first name?</span>\n        <span className=\"text-rose-500\">*</span>\n        <input\n          type=\"text\"\n          id=\"firstName\"\n          name=\"first_name\"\n          className={`\n                    mt-1\n                    block\n                    w-full\n                    rounded-md\n                    bg-gray-100\n                    border-transparent\n                    focus:border-gray-500 focus:bg-white focus:ring-0\n                    ${errors?.first_name ? `border-rose-500` : ` `}\n                  `}\n          placeholder=\"e.g. Satoshi\"\n          {...register(`first_name`, { required: true })}\n        />\n        {errors?.first_name && (\n          <span className=\"text-sm text-rose-500\">\n            Please fill out this field\n          </span>\n        )}\n      </label>\n      <label className=\"block mt-5\" htmlFor=\"lastName\">\n        <span className=\"text-gray-700\">And your last name</span>\n        <input\n          type=\"text\"\n          id=\"lastName\"\n          name=\"last_name\"\n          className=\"\n                    mt-1\n                    block\n                    w-full\n                    rounded-md\n                    bg-gray-100\n                    border-transparent\n                    focus:border-gray-500 focus:bg-white focus:ring-0\n                  \"\n          placeholder=\"e.g. Nakamoto\"\n          {...register(`last_name`)}\n        />\n      </label>\n      <label className=\"block mt-5\" htmlFor=\"countryOfResidence\">\n        <span className=\"text-gray-700\">\n          What&apos;s your country of residence?\n        </span>\n        <select\n          placeholder=\"Choose\"\n          name=\"country_of_residence\"\n          id=\"countryOfResidence\"\n          className=\"\n                    mt-1\n                    block\n                    w-full\n                    rounded-md\n                    bg-gray-100\n                    border-transparent\n                    focus:border-gray-500 focus:bg-white focus:ring-0\n                  \"\n          {...register(`country_of_residence`)}\n        >\n          <option>Choose...</option>\n          {countriesOptions}\n        </select>\n      </label>\n    </div>\n  );\n}\n"],"names":["data","nameMap","codeMap","mapCodeAndName","country","name","toLowerCase","code","forEach","exports","overwrite","countries","length","foundIndex","findIndex","item","getCode","getName","getNames","map","getCodes","getCodeList","getNameList","getData","BasicInfoStep","step","currentStep","register","errors","countriesOptions","countryList","key","style","display","className","htmlFor","type","id","first_name","placeholder","required"],"sourceRoot":""}