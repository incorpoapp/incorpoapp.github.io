{"version":3,"file":"component---src-pages-start-company-form-steps-basic-info-step-index-tsx-821f21ad28576462d549.js","mappings":"uGAEA,IAAIA,EAAO,EAAQ,MAIfC,EAAU,GACVC,EAAU,GAGd,SAASC,EAAeC,GACtBH,EAAQG,EAAQC,KAAKC,eAAiBF,EAAQG,KAC9CL,EAAQE,EAAQG,KAAKD,eAAiBF,EAAQC,KAJhDL,EAAKQ,QAAQL,GAObM,EAAQC,UAAY,SAAmBC,GAChCA,GAAcA,EAAUC,QAC7BD,EAAUH,SAAQ,SAAUJ,GAC1B,IAAIS,EAAab,EAAKc,WAAU,SAAUC,GACxC,OAAOA,EAAKR,OAASH,EAAQG,QAE/BP,EAAKa,GAAcT,EACnBD,EAAeC,OAInBK,EAAQO,QAAU,SAAiBX,GACjC,OAAOJ,EAAQI,EAAKC,gBAGtBG,EAAQQ,QAAU,SAAiBV,GACjC,OAAOL,EAAQK,EAAKD,gBAGtBG,EAAQS,SAAW,WACjB,OAAOlB,EAAKmB,KAAI,SAAUf,GACxB,OAAOA,EAAQC,SAInBI,EAAQW,SAAW,WACjB,OAAOpB,EAAKmB,KAAI,SAAUf,GACxB,OAAOA,EAAQG,SAInBE,EAAQY,YAAc,WACpB,OAAOnB,GAGTO,EAAQa,YAAc,WACpB,OAAOrB,GAGTQ,EAAQc,QAAU,WAChB,OAAOvB,I,yFC/CM,SAASwB,EAAT,GAGS,IAFtBC,EAEqB,EAFrBA,KACAC,EACqB,EADrBA,YAEMC,EAAmBC,EAAAA,UAEtBT,KAAI,gBAAGZ,EAAH,EAAGA,KAAMF,EAAT,EAASA,KAAT,OAAoB,0BAAQwB,IAAKtB,GAAOF,MAC/C,OACE,uBAAKyB,MAAO,CAAEC,QAASN,IAASC,EAAT,kBACrB,yBAAOM,UAAU,aAAaC,QAAQ,aACpC,wBAAMD,UAAU,iBAAhB,2BACA,wBAAMA,UAAU,iBAAhB,KACA,yBACEE,KAAK,OACLC,GAAG,YACH9B,KAAK,aACL2B,UAAU,kHASVI,YAAY,kBAGhB,yBAAOJ,UAAU,aAAaC,QAAQ,YACpC,wBAAMD,UAAU,iBAAhB,sBACA,yBACEE,KAAK,OACLC,GAAG,WACH9B,KAAK,YACL2B,UAAU,kHASVI,YAAY,mBAGhB,yBAAOJ,UAAU,cACf,wBAAMA,UAAU,iBAAhB,qCACA,0BACEI,YAAY,SACZ/B,KAAK,uBACL2B,UAAU,mHAUV,2CACCL,O","sources":["webpack://website/./node_modules/country-list/country-list.js","webpack://website/./src/pages/start-company/form/steps/BasicInfoStep/index.tsx"],"sourcesContent":["'use strict';\n\nvar data = require('./data.json');\n/** Precompute name and code lookups. */\n\n\nvar nameMap = {};\nvar codeMap = {};\ndata.forEach(mapCodeAndName);\n\nfunction mapCodeAndName(country) {\n  nameMap[country.name.toLowerCase()] = country.code;\n  codeMap[country.code.toLowerCase()] = country.name;\n}\n\nexports.overwrite = function overwrite(countries) {\n  if (!countries || !countries.length) return;\n  countries.forEach(function (country) {\n    var foundIndex = data.findIndex(function (item) {\n      return item.code === country.code;\n    });\n    data[foundIndex] = country;\n    mapCodeAndName(country);\n  });\n};\n\nexports.getCode = function getCode(name) {\n  return nameMap[name.toLowerCase()];\n};\n\nexports.getName = function getName(code) {\n  return codeMap[code.toLowerCase()];\n};\n\nexports.getNames = function getNames() {\n  return data.map(function (country) {\n    return country.name;\n  });\n};\n\nexports.getCodes = function getCodes() {\n  return data.map(function (country) {\n    return country.code;\n  });\n};\n\nexports.getCodeList = function getCodeList() {\n  return codeMap;\n};\n\nexports.getNameList = function getNameList() {\n  return nameMap;\n};\n\nexports.getData = function getData() {\n  return data;\n};","import React from 'react';\nimport countryList from 'country-list';\n\ninterface BasicInfoStepProps {\n  step: number;\n  currentStep: number;\n}\n\nexport default function BasicInfoStep({\n  step,\n  currentStep,\n}: BasicInfoStepProps) {\n  const countriesOptions = countryList\n    .getData()\n    .map(({ code, name }) => <option key={code}>{name}</option>);\n  return (\n    <div style={{ display: step === currentStep ? `inline` : `none` }}>\n      <label className=\"block mt-5\" htmlFor=\"firstName\">\n        <span className=\"text-gray-700\">What's your first name?</span>\n        <span className=\"text-rose-500\">*</span>\n        <input\n          type=\"text\"\n          id=\"firstName\"\n          name=\"first_name\"\n          className=\"\n                    mt-1\n                    block\n                    w-full\n                    rounded-md\n                    bg-gray-100\n                    border-transparent\n                    focus:border-gray-500 focus:bg-white focus:ring-0\n                  \"\n          placeholder=\"e.g. Satoshi\"\n        />\n      </label>\n      <label className=\"block mt-5\" htmlFor=\"lastName\">\n        <span className=\"text-gray-700\">And your last name</span>\n        <input\n          type=\"text\"\n          id=\"lastName\"\n          name=\"last_name\"\n          className=\"\n                    mt-1\n                    block\n                    w-full\n                    rounded-md\n                    bg-gray-100\n                    border-transparent\n                    focus:border-gray-500 focus:bg-white focus:ring-0\n                  \"\n          placeholder=\"e.g. Nakamoto\"\n        />\n      </label>\n      <label className=\"block mt-5\">\n        <span className=\"text-gray-700\">What's your country of residence?</span>\n        <select\n          placeholder=\"Choose\"\n          name=\"country_of_residence\"\n          className=\"\n                    mt-1\n                    block\n                    w-full\n                    rounded-md\n                    bg-gray-100\n                    border-transparent\n                    focus:border-gray-500 focus:bg-white focus:ring-0\n                  \"\n        >\n          <option>Choose...</option>\n          {countriesOptions}\n        </select>\n      </label>\n    </div>\n  );\n}\n"],"names":["data","nameMap","codeMap","mapCodeAndName","country","name","toLowerCase","code","forEach","exports","overwrite","countries","length","foundIndex","findIndex","item","getCode","getName","getNames","map","getCodes","getCodeList","getNameList","getData","BasicInfoStep","step","currentStep","countriesOptions","countryList","key","style","display","className","htmlFor","type","id","placeholder"],"sourceRoot":""}