{"version":3,"file":"37c1dcffb7c20a77059c2f3455ab23124beb1452-7ba720d11ead98c3d7be.js","mappings":"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","sources":["webpack://gatsby-starter-ts/./node_modules/country-list/country-list.js","webpack://gatsby-starter-ts/./src/pages/start-company/form/index.tsx","webpack://gatsby-starter-ts/./src/pages/start-company/form/steps/AboutBusinessStep/index.tsx","webpack://gatsby-starter-ts/./src/pages/start-company/form/steps/BasicInfoStep/index.tsx","webpack://gatsby-starter-ts/./src/pages/start-company/form/steps/MainStep/index.tsx"],"sourcesContent":["'use strict';\n\nvar data = require('./data.json');\n/** Precompute name and code lookups. */\n\n\nvar nameMap = {};\nvar codeMap = {};\ndata.forEach(mapCodeAndName);\n\nfunction mapCodeAndName(country) {\n  nameMap[country.name.toLowerCase()] = country.code;\n  codeMap[country.code.toLowerCase()] = country.name;\n}\n\nexports.overwrite = function overwrite(countries) {\n  if (!countries || !countries.length) return;\n  countries.forEach(function (country) {\n    var foundIndex = data.findIndex(function (item) {\n      return item.code === country.code;\n    });\n    data[foundIndex] = country;\n    mapCodeAndName(country);\n  });\n};\n\nexports.getCode = function getCode(name) {\n  return nameMap[name.toLowerCase()];\n};\n\nexports.getName = function getName(code) {\n  return codeMap[code.toLowerCase()];\n};\n\nexports.getNames = function getNames() {\n  return data.map(function (country) {\n    return country.name;\n  });\n};\n\nexports.getCodes = function getCodes() {\n  return data.map(function (country) {\n    return country.code;\n  });\n};\n\nexports.getCodeList = function getCodeList() {\n  return codeMap;\n};\n\nexports.getNameList = function getNameList() {\n  return nameMap;\n};\n\nexports.getData = function getData() {\n  return data;\n};","import React, { useState } from 'react';\nimport { AiFillLeftCircle, AiFillRightCircle } from 'react-icons/ai';\nimport { SiMinutemailer } from 'react-icons/si';\nimport MainStep from './steps/MainStep';\nimport BasicInfoStep from './steps/BasicInfoStep';\nimport AboutBusinessStep from './steps/AboutBusinessStep';\n\nexport default function JoinBetaForm() {\n  const [step, setStep] = useState(1);\n\n  const getStepPersentage = (stepNumber: number): string => {\n    switch (stepNumber) {\n      case 1:\n        return `33%`;\n      case 2:\n        return `66%`;\n      default:\n        return `100%`;\n    }\n  };\n\n  return (\n    <form\n      className=\"antialiased bg-white text-gray-900 px-6\"\n      id=\"joinBeta\"\n      name=\"joinBeta\"\n      data-netlify=\"true\"\n    >\n      <div className=\"max-w-xl mx-auto py-12 divide-y md:max-w-4xl\">\n        <div className=\"py-12 mt-10\">\n          <h2 className=\"text-2xl font-bold\">Join Beta</h2>\n          <p className=\"pt-4\">\n            It will be completely FREE during the whole beta cycle. Don't worry,\n            we won't spam you nor share information you provided in any way. You\n            can opt out of our beta communication any time you want, but we\n            greatly appreciate your trust on us.\n          </p>\n          <div className=\"mt-8 max-w-md\">\n            <div className=\"grid grid-cols-1 gap-6\">\n              {step === 1 && <MainStep />}\n              {step === 2 && <BasicInfoStep />}\n              {step === 3 && <AboutBusinessStep />}\n            </div>\n            <div className=\"flex justify-between mt-10\">\n              <button\n                type=\"button\"\n                className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-xl shadow-xl transition ease-in-out delay-150 hover:-translate-y-1 hover:scale-110\"\n                disabled={step === 1}\n                onClick={() => setStep(step - 1)}\n              >\n                <AiFillLeftCircle\n                  style={{ display: `inline` }}\n                  className=\"mr-2\"\n                />\n                Back\n              </button>\n              <button\n                type=\"submit\"\n                form=\"joinBeta\"\n                className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-xl shadow-xl transition ease-in-out delay-150 hover:-translate-y-1 hover:scale-110\"\n                disabled={step < 2}\n              >\n                <SiMinutemailer\n                  style={{ display: `inline` }}\n                  className=\"mr-2\"\n                />\n                Send\n              </button>\n              <button\n                type=\"button\"\n                className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-xl shadow-xl transition ease-in-out delay-150 hover:-translate-y-1 hover:scale-110\"\n                disabled={step > 2}\n                onClick={() => setStep(step + 1)}\n              >\n                Next\n                <AiFillRightCircle\n                  style={{ display: `inline` }}\n                  className=\"ml-2\"\n                />\n              </button>\n            </div>\n            <div className=\"w-full bg-gray-200 h-1 mt-10\">\n              <div\n                className=\"bg-blue-600 h-1\"\n                style={{ width: getStepPersentage(step) }}\n              />\n              <p>Page {step} of 3</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n","import React from 'react';\n\nexport default function AboutBusinessStep() {\n  const rolesList: Array<string> = [\n    `CEO`,\n    `CFO / Corp Management`,\n    `CTO / VP / Head / Director Engineering`,\n    `CPO / Head of Product`,\n    `Other C-suite`,\n    `Shareholder / Owner / Founder`,\n    `Board Member / Investor`,\n    `Advisor`,\n    `Partner`,\n    `Leader of Sales or Marketing`,\n    `Leader of Growth or BD`,\n    `Leader of Business Operations`,\n    `Leader of HR / People`,\n    `Legal / Counsel`,\n    `Non-executive Manager`,\n    `Software Engineer / Tech`,\n    `Hardware Engineer / Tech`,\n    `Product Manager`,\n    `Project / Program Manager`,\n    `Designer`,\n    `Marketing Manager (Branding, PR, Ads)`,\n    `Customer Service Manager`,\n    `Operations Manager`,\n    `Sales / BD Manager`,\n    `Finance / Accounting Manager`,\n    `Business / Data Analytics`,\n    `Procurement / Supply-Chain Manager`,\n    `Freelancer / Contractor`,\n    `Researcher`,\n  ];\n\n  const jurisdictionList: Array<string> = [\n    `Yes, incorporated`,\n    `No, not incorporated`,\n    `In the process of incorporation`,\n  ];\n\n  const jurisdictionRadios = jurisdictionList.map((name) => (\n    <div className=\"mt-2\">\n      <label className=\"rounded\">\n        <input\n          type=\"radio\"\n          className=\"\n      rounded\n      bg-gray-200\n      border-transparent\n      focus:border-transparent focus:bg-gray-200\n      text-gray-700\n      focus:ring-1 focus:ring-offset-2 focus:ring-gray-500\n      form-radio\n    \"\n          value={name}\n          name=\"jurisdiction\"\n          key={name}\n        />\n        {` `}\n        {name}\n      </label>\n    </div>\n  ));\n\n  const rolesCheckboxes = rolesList.map((name, index) => (\n    <div className=\"mt-2\">\n      <label\n        className=\"inline-flex items-center\"\n        htmlFor={`field-roles-${index}`}\n        key={name}\n      >\n        <input\n          id={`field-roles-${index}`}\n          type=\"checkbox\"\n          className=\"\n      rounded\n      bg-gray-200\n      border-transparent\n      focus:border-transparent focus:bg-gray-200\n      text-gray-700\n      focus:ring-1 focus:ring-offset-2 focus:ring-gray-500\n    \"\n        />\n        <span className=\"ml-2\">{name}</span>\n      </label>\n    </div>\n  ));\n  return (\n    <>\n      <label className=\"block\" htmlFor=\"businessName\">\n        <span className=\"text-gray-700\">\n          What's your company or business name?\n        </span>\n        <p className=\"text-xs\">\n          If you haven't decided on the company name, fill in the intended\n          project name. You can change it later.\n        </p>\n        <input\n          type=\"text\"\n          id=\"businessName\"\n          className=\"\n                    mt-1\n                    block\n                    w-full\n                    rounded-md\n                    bg-gray-100\n                    border-transparent\n                    focus:border-gray-500 focus:bg-white focus:ring-0\n                  \"\n          placeholder=\"Your answer\"\n        />\n      </label>\n      <label className=\"block\" htmlFor=\"website\">\n        <span className=\"text-gray-700\">What's the company website?</span>\n        <p className=\"text-xs\">\n          If you don't have a website yet, fill in any link that describes your\n          business.\n        </p>\n        <input\n          type=\"text\"\n          id=\"website\"\n          className=\"\n                    mt-1\n                    block\n                    w-full\n                    rounded-md\n                    bg-gray-100\n                    border-transparent\n                    focus:border-gray-500 focus:bg-white focus:ring-0\n                  \"\n          placeholder=\"Your answer\"\n        />\n      </label>\n      <label className=\"block\" htmlFor=\"businessName\">\n        <span className=\"text-gray-700\">What's your current job title?</span>\n        <input\n          type=\"text\"\n          id=\"businessName\"\n          className=\"\n                    mt-1\n                    block\n                    w-full\n                    rounded-md\n                    bg-gray-100\n                    border-transparent\n                    focus:border-gray-500 focus:bg-white focus:ring-0\n                  \"\n          placeholder=\"e.g. Software Engineer, CTO, CEO\"\n        />\n      </label>\n      <div className=\"block\">\n        <span className=\"text-gray-700\">\n          What roles do you have within the company?\n        </span>\n        <p className=\"text-xs\">Select all that applies to you.</p>\n        {rolesCheckboxes}\n      </div>\n      <label className=\"block\">\n        <span className=\"text-gray-700\">\n          Is the company registered in any jurisdiction?\n        </span>\n        {jurisdictionRadios}\n      </label>\n    </>\n  );\n}\n","import React from 'react';\nimport countryList from 'country-list';\n\nexport default function BasicInfoStep() {\n  const countriesOptions = countryList\n    .getData()\n    .map(({ code, name }) => <option key={code}>{name}</option>);\n  return (\n    <>\n      <label className=\"block\" htmlFor=\"firstName\">\n        <span className=\"text-gray-700\">What's your first name?</span>\n        <input\n          type=\"text\"\n          id=\"firstName\"\n          className=\"\n                    mt-1\n                    block\n                    w-full\n                    rounded-md\n                    bg-gray-100\n                    border-transparent\n                    focus:border-gray-500 focus:bg-white focus:ring-0\n                  \"\n          placeholder=\"e.g. Satoshi\"\n        />\n      </label>\n      <label className=\"block\" htmlFor=\"lastName\">\n        <span className=\"text-gray-700\">And your last name</span>\n        <input\n          type=\"text\"\n          id=\"lastName\"\n          className=\"\n                    mt-1\n                    block\n                    w-full\n                    rounded-md\n                    bg-gray-100\n                    border-transparent\n                    focus:border-gray-500 focus:bg-white focus:ring-0\n                  \"\n          placeholder=\"e.g. Nakamoto\"\n        />\n      </label>\n      <label className=\"block\">\n        <span className=\"text-gray-700\">What's your country of residence?</span>\n        <select className=\"block w-full mt-1\" placeholder=\"Choose\">\n          <option>Choose...</option>\n          {countriesOptions}\n        </select>\n      </label>\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function MainStep() {\n  const solutionsList: Array<string> = [\n    `Automate and Optimize Corporate Tax Filing`,\n    `Business Accounting`,\n    `Automate Payments`,\n    `Formulate B2B Contracts`,\n    `Incorporate Company`,\n    `Formulate Investment Agreements`,\n    `Establish Shareholder Agreements`,\n    `Get Funding`,\n    `Access Business Banking Services`,\n    `Discover Markets and Convert Prospects`,\n    `Scale Business Globally`,\n  ];\n\n  const solutionsCheckboxes = solutionsList.map((name, index) => (\n    <div className=\"mt-2\">\n      <label\n        className=\"inline-flex items-center\"\n        htmlFor={`field-solutions-${index}`}\n        key={name}\n      >\n        <input\n          id={`field-solutions-${index}`}\n          type=\"checkbox\"\n          className=\"\n      rounded\n      bg-gray-200\n      border-transparent\n      focus:border-transparent focus:bg-gray-200\n      text-gray-700\n      focus:ring-1 focus:ring-offset-2 focus:ring-gray-500\n    \"\n        />\n        <span className=\"ml-2\">{name}</span>\n      </label>\n    </div>\n  ));\n\n  return (\n    <>\n      <label className=\"block\" htmlFor=\"email\">\n        <span className=\"text-gray-700\">Email address</span>\n        <input\n          type=\"email\"\n          id=\"email\"\n          className=\"\n              mt-1\n              block\n              w-full\n              rounded-md\n              bg-gray-100\n              border-transparent\n              focus:border-gray-500 focus:bg-white focus:ring-0\n            \"\n          placeholder=\"john@example.com\"\n        />\n      </label>\n      <div className=\"block\">\n        <span className=\"text-gray-700\">\n          What solutions are you looking for?\n        </span>\n        {solutionsCheckboxes}\n      </div>\n    </>\n  );\n}\n"],"names":["data","nameMap","codeMap","mapCodeAndName","country","name","toLowerCase","code","forEach","exports","overwrite","countries","length","foundIndex","findIndex","item","getCode","getName","getNames","map","getCodes","getCodeList","getNameList","getData","JoinBetaForm","useState","step","setStep","className","id","type","disabled","onClick","style","display","form","width","stepNumber","getStepPersentage","AboutBusinessStep","jurisdictionRadios","value","key","rolesCheckboxes","index","htmlFor","placeholder","BasicInfoStep","countriesOptions","countryList","MainStep","solutionsCheckboxes"],"sourceRoot":""}